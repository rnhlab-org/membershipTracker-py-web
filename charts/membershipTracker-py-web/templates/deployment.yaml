apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }} # Explicitly specify a namespace in the Helm template ##Checkov fix
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
    spec:
      automountServiceAccountToken: false ## Added to disable automounting of service account token per SonarCloud recommendation
      terminationGracePeriodSeconds: 30 #  Ensures safe pod shutdown
      containers:
      - name: membershipTracker-py-web
        image: "{{ .Values.image.repository }}@{{ .Values.image.digest }}" # Use image digest instead of tag ##Checkov fix
        #image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}" ##Checkov fix
        imagePullPolicy: {{ .Values.image.pullPolicy }} #  Always pull the image ##Checkov fix
        securityContext:
          seccompProfile:              # Add a security context with seccompProfile ##Checkov fix
            type: RuntimeDefault     # Add a security context with seccompProfile  ##Checkov fix 
          capabilities:  ##Checkov fix
            drop:                     # Drop all capabilities and add only the necessary ones ##Checkov fix
              - ALL ##Checkov fix
          readOnlyRootFilesystem: true # Prevents write access to the root filesystem
          runAsGroup: 1000 # Use a non-root group
          runAsUser: 1000 # Use a non-root user
          fsGroup: 1000 # Use a non-root group
          runAsNonRoot: true # Prevents running as root
          allowPrivilegeEscalation: false # Prevents security vulnerabilities
        ports:
        - containerPort: 8000
        ## Resource Limits added as per SonarCloud recommendation
        livenessProbe:    #  Add a liveness probe to check if the container is running ##Checkov fix
          httpGet:                          ##Checkov fix
            path: /healthz
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 10
        readinessProbe:   #  Add a readiness probe to check if the container is ready to serve traffic ##Checkov fix
          httpGet:
            path: /readyz
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:  
          requests:
            memory: "256Mi" # 256 MB
            cpu: "250m" # 250 millicpu
            ephemeral-storage: "1Gi" # 1 GB
          limits:
            memory: "512Mi" # 512 MB
            cpu: "500m" # 500 millicpu
        env:
        - name: APP_VERSION
          value: "{{ .Chart.AppVersion }}" #  Dynamically updated from the GitHub Actions
      affinity:
        podAntiAffinity:  #  Ensures that pods are not scheduled on the same node
          requiredDuringSchedulingIgnoredDuringExecution:  #  Ensures that pods are not scheduled on the same node
            - labelSelector: #  Ensures that pods are not scheduled on the same node
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - membershipTracker-py-web
              topologyKey: "kubernetes.io/hostname"