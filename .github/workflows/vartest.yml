name: CI/CD Workflow for MembershipTracker-py-web

# Trigger the workflow based on specific events
on:
  workflow_dispatch:  # Trigger the workflow manually
  push:
    branches:
      - stage  # Trigger on direct pushes to the stage branch
      - v1.0.0-alpha.10-varTS # Test Branch
    tags:
      - 'stage-*'  # Trigger on tags starting with stage- (e.g., stage-1.0.0-alpha.1)
      - 'v*.*.*'    # Trigger on version tags (e.g., v1.0.0)
  pull_request:
    branches:
      - stage  # Trigger on pull requests to stage branch
      - main   # Trigger on pull requests to main branch

jobs:
  # Step 1: Run Code Quality and Security Checks
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
      full_image_tag: ${{ steps.extract.outputs.full_image_tag }}
      local_image_tag: ${{ steps.extract.outputs.local_image_tag }}
    steps:
      - name: Extract Version and Set Image Tag
        id: extract
        run: |
          ## Pull in the version from the tag
          if [[ "${GITHUB_REF}" =~ ^refs/tags/v ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            FULL_IMAGE_TAG="798742520104.dkr.ecr.us-west-1.amazonaws.com/membershiptracker-py-web:${VERSION}"
            LOCAL_IMAGE_TAG="membershiptracker-py-web:${VERSION}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/stage ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            FULL_IMAGE_TAG="798742520104.dkr.ecr.us-west-1.amazonaws.com/membershiptracker-py-web-dev:${VERSION}"
            LOCAL_IMAGE_TAG="membershiptracker-py-web-dev:${VERSION}"
          else
            VERSION=latest
            FULL_IMAGE_TAG="798742520104.dkr.ecr.us-west-1.amazonaws.com/membershiptracker-py-web-dev:latest"
            LOCAL_IMAGE_TAG="membershiptracker-py-web-dev:latest"
          fi

          # Output the version and image tag for other jobs to use
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "full_image_tag=${FULL_IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "local_image_tag=${LOCAL_IMAGE_TAG}" >> $GITHUB_OUTPUT  

          # Echo the current version and image tag for debugging
          echo "Version: $VERSION"
          echo "Local Image Tag: $LOCAL_IMAGE_TAG"
          echo "Full Image Tag: $FULL_IMAGE_TAG"

  setup-validate1:
    name: Setup Output Variable Validation2 #
    needs: 
      - setup  # Ensure setup job completes successfully before running    
    env:
      VERSION: ${{ needs.setup.outputs.version }}
      FULL_IMAGE_TAG: ${{ needs.setup.outputs.full_image_tag }}
      LOCAL_IMAGE_TAG: ${{ needs.setup.outputs.local_image_tag }}  
    runs-on: ubuntu-latest
    steps:  
      - name: -DEBUG- Validate Setup Outputs
        id: vardebug1
        run: |
          echo "Version: $VERSION" # Log the extracted version
          echo "Local Image Tag: $LOCAL_IMAGE_TAG"
          echo "Full Image Tag: $FULL_IMAGE_TAG" 

  setup-validate2:
    name: Setup Output Variable Validation2 #
    needs: 
      - setup  # Ensure setup job completes successfully before running    
    env:
      VERSION: ${{ needs.setup.outputs.version }}
      FULL_IMAGE_TAG: ${{ needs.setup.outputs.full_image_tag }}
      LOCAL_IMAGE_TAG: ${{ needs.setup.outputs.local_image_tag }}  
    runs-on: ubuntu-latest
    steps:  
      - name: -DEBUG- Validate Setup Outputs
        id: vardebug2
        run: |
          echo "Version: $VERSION" # Log the extracted version
          echo "Local Image Tag: $LOCAL_IMAGE_TAG"
          echo "Full Image Tag: $FULL_IMAGE_TAG"